MaternalID <- fetch_pedigree(pedigree_df, OffspringID)[2]
if(stringr::str_detect(CNV$batch,"NimbleGenV2")){
Norm_RD_dir <- Norm_RD_NimbleGenV2_dir
models_df   <- models_NimbleGenV2_df
}
if(stringr::str_detect(CNV$batch,"MedExome")){
Norm_RD_dir <- Norm_RD_MedExome_dir
models_df   <- models_MedExome_df
}
if(stringr::str_detect(CNV$batch,"PCGC11")){
Norm_RD_dir <- Norm_RD_PCGC11_dir
models_df   <- models_PCGC11_df
}
## load data for trio
NormRD_off_df <- read.table(file=paste(Norm_RD_dir,OffspringID,'.norm.cov.bed.gz',sep=''),header=F,col.names=c("CHR","START","END","RD_norm"))
NormRD_par_df <- read.table(file=paste(Norm_RD_dir,PaternalID ,'.norm.cov.bed.gz',sep=''),header=F,col.names=c("CHR","START","END","RD_norm"))
NormRD_mar_df <- read.table(file=paste(Norm_RD_dir,MaternalID ,'.norm.cov.bed.gz',sep=''),header=F,col.names=c("CHR","START","END","RD_norm"))
## fetch data for CNV extent region
offspring_df <- fetch_data(CNV, NormRD_off_df, models_df)
CnvExt_df <- offspring_df[[1]]
Cnv_df    <- offspring_df[[2]]
father_df <- fetch_data(CNV, NormRD_par_df, models_df)
CnvExt_par_df <- father_df[[1]]
Cnv_par_df    <- father_df[[2]]
mother_df <- fetch_data(CNV, NormRD_mar_df, models_df)
CnvExt_mar_df <- mother_df[[1]]
Cnv_mar_df    <- mother_df[[2]]
# Determine the limit
Y.MAX<-max(0.7, with(CnvExt_df, max((RD_norm-MU)/MU)))
Y.MIN<-min(-0.9,with(CnvExt_df, min((RD_norm-MU)/MU)))
if(Y.MAX == 'Inf' || Y.MAX == '-Inf' || Y.MAX == 'NaN' ){
Y.MAX <-  1
}
if(Y.MIN == 'Inf' || Y.MIN == '-Inf' || Y.MIN == 'NaN' ){
Y.MIN <- -1
}
Y.MIN <- -1 # for RDnorm==0
PLOT<-ggplot(CnvExt_df, aes(x=(START+END)/2, y=(RD_norm-MU)/MU)) +
scale_y_continuous(limits=c(Y.MIN,Y.MAX)) +
geom_ribbon(aes(ymin = -2*SIGMA, ymax=2*SIGMA),fill="lightgrey") +
geom_ribbon(aes(ymin = -SIGMA, ymax=SIGMA),fill="grey") +
geom_hline(yintercept=-0.5, colour="grey40", linetype="dashed") +
geom_hline(yintercept=0.5,  colour="grey40", linetype="dashed") +
geom_point(color="grey", shape=1, size=2) +
geom_line(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color= "grey40", size=0.2) +
geom_rug(sides="b")  +
theme_bw() + xlab(paste("Chromosome", CNV$CHR, "position")) + ylab("Norm depth relative to diploid") +
ggtitle(paste0("Offspring(red):",OffspringID, " ",CNV$cnv_chr, ":",CNV$cnv_start,"-",CNV$cnv_stop," (",CNV$cnv_size, "kb) ", CNV$cnv_type, " #Targets:",CNV$num_target,
"\nFather(blue):", PaternalID, "  Mother(green):", MaternalID))  +
theme(plot.title = element_text(hjust = 0.5))
# plot offspring CNV
PLOT <- PLOT + geom_point(color="red", data=Cnv_df, shape=1, size=2) +
geom_line(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="red", data=Cnv_df)
# plot paternal signals
PLOT <- PLOT + geom_point(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="blue", data=CnvExt_par_df, shape=1, size=1)
PLOT <- PLOT + geom_point(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="blue", data=Cnv_par_df, shape=1, size=1) +
geom_line(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="blue", size=0.2, data=Cnv_par_df)
# plot maternal signals
PLOT <- PLOT + geom_point(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="green", data=CnvExt_mar_df, shape=1, size=1)
PLOT <- PLOT + geom_point(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="green", data=Cnv_mar_df, shape=1, size=1) +
geom_line(aes( x=(START+END)/2, y=(RD_norm-MU)/MU ), color="green", size=0.2, data=Cnv_mar_df)
PLOT
ggsave(paste0(Wrkdir, "/", OffspringID,"_",CNV$cnv_chr,"_",CNV$cnv_start,"_",CNV$cnv_stop, ".png"), PLOT, width=7, height=4, unit="in")
}
Cnvtab
II <- 2
rm(CnvExt_df, Cnv_df)
rm(CnvExt_par_df, Cnv_par_df)
rm(CnvExt_mar_df , Cnv_mar_df)
CNV<-Cnvtab[II,]
print(CNV)
## fetch pedigree ID
OffspringID <- CNV$sample_ID
PaternalID <- fetch_pedigree(pedigree_df, OffspringID)[1]
MaternalID <- fetch_pedigree(pedigree_df, OffspringID)[2]
if(stringr::str_detect(CNV$batch,"NimbleGenV2")){
Norm_RD_dir <- Norm_RD_NimbleGenV2_dir
models_df   <- models_NimbleGenV2_df
}
if(stringr::str_detect(CNV$batch,"MedExome")){
Norm_RD_dir <- Norm_RD_MedExome_dir
models_df   <- models_MedExome_df
}
if(stringr::str_detect(CNV$batch,"PCGC11")){
Norm_RD_dir <- Norm_RD_PCGC11_dir
models_df   <- models_PCGC11_df
}
OffspringID
## load data for trio
NormRD_off_df <- read.table(file=paste(Norm_RD_dir,OffspringID,'.norm.cov.bed.gz',sep=''),header=F,col.names=c("CHR","START","END","RD_norm"))
NormRD_mar_df <- read.table(file=paste(Norm_RD_dir,MaternalID ,'.norm.cov.bed.gz',sep=''),header=F,col.names=c("CHR","START","END","RD_norm"))
## fetch data for CNV extent region
offspring_df <- fetch_data(CNV, NormRD_off_df, models_df)
CnvExt_df <- offspring_df[[1]]
Cnv_df    <- offspring_df[[2]]
father_df <- fetch_data(CNV, NormRD_par_df, models_df)
CnvExt_par_df <- father_df[[1]]
Cnv_par_df    <- father_df[[2]]
mother_df <- fetch_data(CNV, NormRD_mar_df, models_df)
CnvExt_mar_df <- mother_df[[1]]
Cnv_mar_df    <- mother_df[[2]]
Cnv_df
Cnv_df
Cnv_par_df
CnvExt_par_df
Cnv_par_df
mother_df <- fetch_data(CNV, NormRD_mar_df, models_df)
CnvExt_mar_df <- mother_df[[1]]
Cnv_mar_df    <- mother_df[[2]]
Cnv_mar_df
Cnv_par_df
OffspringID
PaternalID
# smoothed scatterplot
smoothScatter(x=gc_norm_df$GC,gc_norm_df$RD_raw,
colramp=myColRamp,
main="Before GC normalization",
xlab="GC",
ylab="RD")
library(ggplot2)
require(IDPmisc)
library(RColorBrewer)
output_dir <- "/Users/rtan/terra_rt2776/CNV_Espresso/images/"
gc_norm_file <- '/home/rt2776/cnv_espresso/data/SP0044942.cov.bed.gz.normalized_gc'
gc_norm_file <- '/Users/rtan/terra_rt2776/CNV_Espresso/data/norm/SP0000027.cov.bed.norm'
gc_norm_df <- read.table(gc_norm_file,col.names = c("CHR", "START", "END", "GC", "RD_raw", "RD_norm"))
myColRamp = colorRampPalette(c(buylrd))
# smoothed scatterplot
smoothScatter(x=gc_norm_df$GC,gc_norm_df$RD_raw,
colramp=myColRamp,
main="Before GC normalization",
xlab="GC",
ylab="RD")
# create a color palette to use in smoothed scatterplot
#https://rstudio-pubs-static.s3.amazonaws.com/151690_ac65a180e03641e2adc3cb2ecf6306c3.html
buylrd = c("#313695", "#4575B4", "#74ADD1", "#ABD9E9", "#E0F3F8", "#FFFFBF",
"#FEE090", "#FDAE61", "#F46D43", "#D73027", "#A50026")
myColRamp = colorRampPalette(c(buylrd))
# smoothed scatterplot
smoothScatter(x=gc_norm_df$GC,gc_norm_df$RD_raw,
colramp=myColRamp,
main="Before GC normalization",
xlab="GC",
ylab="RD")
sample_batch_file <- '/Users/rtan/terra_rt2776/SPARK/CANOES/0-RC/spark_27270_by10Groups/spark_w_batch.list'
sample_batch_info <- read.table(file=sample_batch_file)
View(sample_batch_info)
# training set info
training_set_true_df <- read.table('/Users/rtan/terra_rt2776/CNV_Espresso/training_set/training_set_true.txt',header = TRUE)
View(training_set_true_df)
training_set_false_df <- read.table('/Users/rtan/terra_rt2776/CNV_Espresso/training_set/training_set_false.txt',header = TRUE)
training_set_true_df
unique(traning_set_true_df$SAMPLE)
unique(training_set_true_df$SAMPLE)
traning_set_true_sample <- unique(training_set_true_df$SAMPLE)
traning_set_false_sample <- unique(training_set_false_df$SAMPLE)
traning_set_false_sample
head(traning_set_true_sample)
canoes_cov_spark1 <- load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark1'))
# CANOES correlate coefficient info
canoes_cov_dir <- '/Users/rtan/terra_rt2776/SPARK/CANOES/0-RC/spark_merged_RC/'
canoes_cov_spark1 <- load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark1'))
View(covariance)
for(sample.name in traning_set_true_sample) {
print(sample.name)
}
traning_set_true_sample[1]
sample.name <-traning_set_true_sample[1]
reference.samples <- setdiff(traning_set_true_sample, sample.name)
reference.samples
length(traning_set_true_sample)
length(reference.samples)
covariances <- covariance[sample.name, reference.samples]
sample.name
covariance[sample.name, reference.samples]
covariances <- covariance[sample.name, ]
covariances
covariances <- covariance[sample.name, reference.samples]
dim(covariances)
covariances <- covariance[sample.name, -sample.name]
covariances
covariance[sample.name, 1]
covariance[sample.name, ]
View(covariance)
typeof(sample.name)
sample.name
reference.samples
reference.samples[1]
covariances <- covariance[sample.name, reference.samples[1]]
covariances
covariances <- covariance[sample.name, reference.samples]
length(reference.samples)
ncol(covariance)
colnames(reference.samples)
colnames(covariance)
reference.samples <- setdiff(colnames(covariance), sample.name)
colnames(covariance
)
length(reference.samples)
ncol(covariance)
covariances <- covariance[sample.name, reference.samples]
covariances
reference.samples <- names(sort(covariances,
decreasing=T)[1:min(numrefs, length(covariances))])
# number of reference samples
numrefs <- 100
reference.samples <- names(sort(covariances,
decreasing=T)[1:min(numrefs, length(covariances))])
reference.samples
sort(covariances,
decreasing=T)[1:min(numrefs, length(covariances))]
reference.samples.coeffcient <- sort(covariances,
decreasing=T)[1:min(numrefs, length(covariances))]
reference.samples.coeffcient
[reference.samples, reference.samples.coeffcient]
result <- c(reference.samples, reference.samples.coeffcient)
result
rm(reference.samples.coeffcient)
result <- data.frame(names(reference.samples.coeffcients), reference.samples.coeffcients)
reference.samples.coeffcients <- sort(covariances,
decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples.coeffcients), reference.samples.coeffcients)
View(result)
sample.name
rm(reference.samples.coeffcients)
# output_dir
output_dir <- '/Users/rtan/terra_rt2776/CNV_Espresso/reference_samples/'
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'))
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names = FALSE,header=FALSE)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'), col.names=FALSE, row.names=FALSE)
write.table(result,file=bzfile(paste0(output_dir,sample.name,'.ref.samples.bz2')), col.names=FALSE, row.names=FALSE)
write.table(result,file=bzfile(paste0(output_dir,sample.name,'.ref.samples.bz2'),col.names=FALSE, row.names=FALSE))
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt',col.names=FALSE, row.names=FALSE))
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
sample.name
sample_batch_info[which(sample_batch_info$V1==sample.name),]
which(sample_batch_info$V1==sample.name)
sample_batch_info$V1
which(sample_batch_info$V1=sample.name)
which(sample_batch_info$V1 == sample.name)
which(as.charactor(sample_batch_info$V1) == sample.name)
as.character(sample_batch_info$V1) == sample.name)
which(as.character(sample_batch_info$V1) == sample.name)
sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]
sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
sample.batch
canoes_cov_spark1 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark2'))
canoes_cov_spark2 <- covariance
View(canoes_cov_spark1)
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark1'))
canoes_cov_spark1 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark2'))
canoes_cov_spark2 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark3'))
canoes_cov_spark3 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark4'))
canoes_cov_spark4 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark5'))
canoes_cov_spark5 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark6'))
canoes_cov_spark6 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark7'))
canoes_cov_spark7 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark8'))
canoes_cov_spark8 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark9'))
canoes_cov_spark9 <- covariance
load(paste0(canoes_cov_dir,'cov.cons_canoes_reads_spark10'))
canoes_cov_spark10 <- covariance
rm(covariance)
sample.batch
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
for(sample.name in traning_set_true_sample) {
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
}
num <- 0
for(sample.name in traning_set_true_sample) {
num <- num + 1
print(paste(num, sample.name))
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
}
sample.name
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
sample.batch
sample.name
sample_not_batch = c()
typeof(sample_not_batch)
sample_not_in_batch <- data.frame()
typeof(sample_not_in_batch)
rbind(sample_not_in_batch,sample.name)
sample_not_in_batch
sample.name
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
sample_not_in_batch
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
sample_not_in_batch
sample_not_in_batch <- data.frame()
sample_not_in_batch
num <- 0
for(sample.name in traning_set_true_sample) {
num <- num + 1
print(paste(num, sample.name))
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}else{
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
next()
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
}
sample.batch
sample.batchsample.name in sample_batch_info$V1
sample.name in sample_batch_info$V1
sample.name
sample_batch_info$V1
sample_not_in_batch <- data.frame()
num <- 0
for(sample.name in traning_set_true_sample) {
num <- num + 1
print(paste(num, sample.name))
if (sample.name in sample_batch_info$V1){
sample.name %in% sample_batch_info$V1
sample.name
sample_not_in_batch <- data.frame()
num <- 0
for(sample.name in traning_set_true_sample) {
num <- num + 1
print(paste(num, sample.name))
if (sample.name %in% sample_batch_info$V1){
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}else{
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
next
}
}else{
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
next
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
}
sample_not_in_batch
traning_set_false_sample
sample.pool <- traning_set_false_sample
num <- 0
for(sample.name in sample.pool) {
num <- num + 1
print(paste(num, sample.name))
if (sample.name %in% sample_batch_info$V1){
sample.batch <- sample_batch_info[which(as.character(sample_batch_info$V1) == sample.name),]$V2
if(sample.batch=='spark1'){
covariance <- canoes_cov_spark1
}else if(sample.batch=='spark2'){
covariance <- canoes_cov_spark2
}else if(sample.batch=='spark3'){
covariance <- canoes_cov_spark3
}else if(sample.batch=='spark4'){
covariance <- canoes_cov_spark4
}else if(sample.batch=='spark5'){
covariance <- canoes_cov_spark5
}else if(sample.batch=='spark6'){
covariance <- canoes_cov_spark6
}else if(sample.batch=='spark7'){
covariance <- canoes_cov_spark7
}else if(sample.batch=='spark8'){
covariance <- canoes_cov_spark8
}else if(sample.batch=='spark9'){
covariance <- canoes_cov_spark9
}else if(sample.batch=='spark10'){
covariance <- canoes_cov_spark10
}
}else{
sample_not_in_batch <-rbind(sample_not_in_batch,sample.name)
next
}
reference.samples <- setdiff(colnames(covariance), sample.name)
covariances <- covariance[sample.name, reference.samples]
reference.samples <- sort(covariances, decreasing=T)[1:min(numrefs, length(covariances))]
result <- data.frame(names(reference.samples), reference.samples)
write.table(result,file=paste0(output_dir,sample.name,'.ref.samples.txt'),col.names=FALSE, row.names=FALSE,quote =FALSE)
}
sample_not_in_batch
sample_not_in_batch
